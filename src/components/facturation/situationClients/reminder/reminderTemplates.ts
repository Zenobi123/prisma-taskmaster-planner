
import { formatMontant, formatDate } from "@/utils/formatUtils";
import { InvoiceDetails } from "./types";

export const getEmailTemplate = (invoiceDetails: InvoiceDetails | null): string => {
  if (!invoiceDetails) {
    return `Objet : Information sur votre facture NÂ°XXXX

Cher(e) [Nom du client], 

Nous espÃ©rons que vous allez bien.  

Nous souhaitons vous informer que votre facture NÂ°XXXX d'un montant de [Montant total] F CFA est toujours en attente de rÃ¨glement.  

ðŸ”¹ Montant restant Ã  payer : [Montant restant] F CFA  
ðŸ”¹ Date d'Ã©chÃ©ance : [Date]  

Nous vous invitons Ã  effectuer votre rÃ¨glement Ã  votre convenance via :  
âœ” Orange Money : [NumÃ©ro de paiement]  
âœ” MTN Mobile Money : [NumÃ©ro de paiement]    

Si votre paiement a dÃ©jÃ  Ã©tÃ© effectuÃ©, merci de ne pas tenir compte de ce message.  

N'hÃ©sitez pas Ã  nous contacter au [NumÃ©ro support] ou Ã  rÃ©pondre Ã  cet email si vous avez la moindre question.  

Nous restons Ã  votre disposition et vous remercions pour votre confiance.  

Cordialement,
PRISMA GESTION`;
  }

  return `Objet : Information sur votre facture NÂ°${invoiceDetails.id}

Cher(e) ${invoiceDetails.client.nom}, 

Nous espÃ©rons que vous allez bien.  

Nous souhaitons vous informer que votre facture NÂ°${invoiceDetails.id} d'un montant de ${formatMontant(invoiceDetails.montant)} est toujours en attente de rÃ¨glement.  

ðŸ”¹ Montant restant Ã  payer : ${formatMontant(invoiceDetails.montant_restant)}  
ðŸ”¹ Date d'Ã©chÃ©ance : ${formatDate(invoiceDetails.echeance)}  

Nous vous invitons Ã  effectuer votre rÃ¨glement Ã  votre convenance via :  
âœ” Orange Money : [NumÃ©ro de paiement]  
âœ” MTN Mobile Money : [NumÃ©ro de paiement]    

Si votre paiement a dÃ©jÃ  Ã©tÃ© effectuÃ©, merci de ne pas tenir compte de ce message.  

N'hÃ©sitez pas Ã  nous contacter au [NumÃ©ro support] ou Ã  rÃ©pondre Ã  cet email si vous avez la moindre question.  

Nous restons Ã  votre disposition et vous remercions pour votre confiance.  

Cordialement,
PRISMA GESTION`;
};

export const getSmsTemplate = (invoiceDetails: InvoiceDetails | null): string => {
  if (!invoiceDetails) {
    return `Cher(e) [Nom du client], votre facture NÂ°XXXX s'Ã©lÃ¨ve Ã  [Montant total] FCFA.  
âœ” Solde rÃ©glÃ© : [Montant payÃ©] FCFA  
âœ” Solde restant : [Montant restant] FCFA  

Vous pouvez payer via :  
âœ” Orange Money : [NumÃ©ro]  
âœ” MTN Mobile Money : [NumÃ©ro]  

Besoin d'aide ? Contactez-nous au [NumÃ©ro support].  
Merci pour votre confiance.  
PRISMA GESTION`;
  }

  return `Cher(e) ${invoiceDetails.client.nom}, votre facture NÂ°${invoiceDetails.id} s'Ã©lÃ¨ve Ã  ${formatMontant(invoiceDetails.montant)}.  
âœ” Solde rÃ©glÃ© : ${formatMontant(invoiceDetails.montant_paye)}  
âœ” Solde restant : ${formatMontant(invoiceDetails.montant_restant)}  

Vous pouvez payer via :  
âœ” Orange Money : [NumÃ©ro]  
âœ” MTN Mobile Money : [NumÃ©ro]  

Besoin d'aide ? Contactez-nous au [NumÃ©ro support].  
Merci pour votre confiance.  
PRISMA GESTION`;
};

export const getBothTemplate = (invoiceDetails: InvoiceDetails | null): string => {
  if (!invoiceDetails) {
    return `[Email & SMS] Rappel important concernant votre facture nÂ°XXXX en attente de paiement. Merci de rÃ©gulariser votre situation rapidement.`;
  }

  return `[Email & SMS] Rappel important pour ${invoiceDetails.client.nom} concernant la facture nÂ°${invoiceDetails.id} de ${formatMontant(invoiceDetails.montant)} (${formatMontant(invoiceDetails.montant_restant)} restant). Ã‰chÃ©ance: ${formatDate(invoiceDetails.echeance)}.`;
};

export const getMessageTemplate = (
  method: 'email' | 'sms' | 'both',
  invoiceDetails: InvoiceDetails | null
): string => {
  switch (method) {
    case 'email':
      return getEmailTemplate(invoiceDetails);
    case 'sms':
      return getSmsTemplate(invoiceDetails);
    case 'both':
      return getBothTemplate(invoiceDetails);
    default:
      return '';
  }
};
